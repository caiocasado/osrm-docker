steps:
  - id: 'app-source-code'
    name: 'alpine'
    waitFor: ['-']
    volumes:
      - name: 'source-code'
        path: '/build/source-code'
    args: ['cp', '-T', '-r', './', '/build/source-code']

  - id: docker-image-build
    name: gcr.io/kaniko-project/executor
    waitFor:
      - 'app-source-code'
    volumes:
      - name: 'source-code'
        path: '/build/source-code'
    args: [
      "--dockerfile=.devops/dockerfiles/Dockerfile",
      "--context=/build/source-code",
      "--build-arg",
      "OSRM_PROFILE=$_VEHICLE",
      "--destination=gcr.io/$PROJECT_ID/deliverycenter-service-osrm:$SHORT_SHA",
      "--destination=gcr.io/$PROJECT_ID/deliverycenter-service-osrm:latest",
      "--cache=true",
      "--cache-ttl=72h"]

  - id: app-apply-deployment
    name: 'gcr.io/cloud-builders/kubectl'
    waitFor:
      - 'docker-image-build'
    args:
    - 'apply'
    - '-f'
    - '.devops/kubernetes/$_VEHICLE/deployment.yaml'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=$_APP_REGION'
      - 'CLOUDSDK_CONTAINER_CLUSTER=$_APP_CLUSTER'

  - id: app-apply-service
    name: 'gcr.io/cloud-builders/kubectl'
    waitFor:
      - 'app-apply-deployment'
    args:
    - 'apply'
    - '-f'
    - '.devops/kubernetes/$_VEHICLE/service.yaml'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=$_APP_REGION'
      - 'CLOUDSDK_CONTAINER_CLUSTER=$_APP_CLUSTER'

  - id: app-set-image
    name: 'gcr.io/cloud-builders/kubectl'
    waitFor:
      - 'app-apply-service'
    args: [
    'set',
    'image',
    'deployment',
    'deliverycenter-service-osrm-$_VEHICLE',
    'deliverycenter-service-osrm-$_VEHICLE=gcr.io/$PROJECT_ID/deliverycenter-service-osrm:$SHORT_SHA',
    '-n',
    '$_APP_NAMESPACE'
    ]
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=$_APP_REGION'
      - 'CLOUDSDK_CONTAINER_CLUSTER=$_APP_CLUSTER'

timeout: '10800s'
options:
  machineType: 'N1_HIGHCPU_32'